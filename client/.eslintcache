[{"/home/madez/Development/madez_music/client/src/index.tsx":"1","/home/madez/Development/madez_music/client/src/reportWebVitals.ts":"2","/home/madez/Development/madez_music/client/src/App.tsx":"3","/home/madez/Development/madez_music/client/src/components/search/search.tsx":"4","/home/madez/Development/madez_music/client/src/components/resultList/result-list.tsx":"5","/home/madez/Development/madez_music/client/src/api/index.tsx":"6","/home/madez/Development/madez_music/client/src/components/modalDetails/modal-details.tsx":"7"},{"size":500,"mtime":1611290617333,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611290023044,"results":"10","hashOfConfig":"9"},{"size":994,"mtime":1611412337020,"results":"11","hashOfConfig":"9"},{"size":793,"mtime":1611380263981,"results":"12","hashOfConfig":"9"},{"size":2185,"mtime":1611435991789,"results":"13","hashOfConfig":"9"},{"size":262,"mtime":1611357391302,"results":"14","hashOfConfig":"9"},{"size":1414,"mtime":1611435920978,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"30gctu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/madez/Development/madez_music/client/src/index.tsx",[],["32","33"],"/home/madez/Development/madez_music/client/src/reportWebVitals.ts",[],"/home/madez/Development/madez_music/client/src/App.tsx",[],"/home/madez/Development/madez_music/client/src/components/search/search.tsx",[],"/home/madez/Development/madez_music/client/src/components/resultList/result-list.tsx",["34"],"import { useState, useEffect, useRef} from 'react';\nimport { ObjectLiteral } from '../../types';\nimport ModalDetail from '../modalDetails/modal-details';\nimport '../resultList/result-list.css';\n\n\ninterface Props {\n    dataSongs: Array<any> | null\n}\n\nfunction ResultsList(props: Props) {\n    const { dataSongs } = props;\n    const containerList = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (dataSongs && containerList.current) {\n            containerList.current.scrollIntoView({\n                behavior: 'smooth'\n            });\n        }\n    }, [dataSongs]);\n\n    const [ detailSong, setDetailSong ] = useState<ObjectLiteral | null>();\n\n    const closeModal = () => {\n        setDetailSong(null);\n    }\n\n    const renderSongs = () => {\n        if(dataSongs !== null) {\n            let songs: Array<any> = [];\n            \n            songs = dataSongs.map((song, index) => {\n                return (\n                    <div className='results_details' key={index}>\n                        {song.album.images[1] ? \n                            <img src={song.album.images[1].url} alt='Album Image' /> : \n                            <div className='default-image-album'></div>\n                        }\n                        <h3 className='results-details_title'>{song.name}</h3>\n                        {song.artists[0].name && <cite className='results-details_author'>{song.artists[0].name}</cite>}\n                        <button onClick={ () => {setDetailSong(song)} }>\n                            Details\n                        </button>\n                    </div>\n                )\n            });  \n            return songs;\n        } else {\n            return null;\n        }\n    }\n\n    return (\n        <div>\n            { dataSongs && <h2 className='results-list__title'>Results</h2> }\n            <div className='results-list' ref={containerList}>\n                {renderSongs()}\n                { detailSong &&\n                    <ModalDetail\n                        details={detailSong}\n                        closeModal={closeModal}\n                    />\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default ResultsList;","/home/madez/Development/madez_music/client/src/api/index.tsx",[],"/home/madez/Development/madez_music/client/src/components/modalDetails/modal-details.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":37,"column":29,"nodeType":"41","endLine":37,"endColumn":85},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]